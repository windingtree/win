{"version":3,"file":"index.node.js","mappings":"mBACA,IAAIA,EAAsB,CCA1BA,EAAwB,CAACC,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXF,EAAoBI,EAAEF,EAAYC,KAASH,EAAoBI,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3EH,EAAwB,CAACS,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFV,EAAyBC,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,M,sDCLvD,MAAM,EAA+BC,QAAQ,gBCGtC,MAAMC,EAGXC,YAAYC,GACV,IAAKA,EACH,MAAM,IAAIC,MAAM,wDAGlBC,KAAKC,MAAQ,IAAIC,EAAAA,YAAI,CAAEJ,MAAAA,IAGzBK,IAAIC,GACF,OAAOJ,KAAKC,MAAMI,IAChB,CACED,GAEF,CACEE,mBAAmB,IAKhB,UAACC,GACR,MAAMC,QAAYR,KAAKC,MAAMf,IAAIqB,GAEjC,IAAKC,IAAQA,EAAIC,GACf,MAAM,IAAIV,MAAO,iBAAgBQ,KAKnC,aAFoBC,EAAIE,SAEX,GAAGC,QClCpB,MAAM,EAA+BhB,QAAQ,iBCAvC,EAA+BA,QAAQ,iBCGvCiB,EAAQ,CAAEC,SCAQ,CAAC1B,EAAc2B,KACrC,MAAMC,EAAO,IAAIC,EAAAA,KAAK,CAACC,KAAKC,UAAU/B,IAAO,CAAEgC,KAAO,qBACtD,OAAO,IAAIC,EAAAA,KAAK,CAACL,GAAmBD,K","sources":["webpack://@windingtree/ipfs-apis/webpack/bootstrap","webpack://@windingtree/ipfs-apis/webpack/runtime/define property getters","webpack://@windingtree/ipfs-apis/webpack/runtime/hasOwnProperty shorthand","webpack://@windingtree/ipfs-apis/webpack/runtime/make namespace object","webpack://@windingtree/ipfs-apis/external commonjs \"web3.storage\"","webpack://@windingtree/ipfs-apis/./src/apis/web3Storage.ts","webpack://@windingtree/ipfs-apis/external commonjs \"@web-std/blob\"","webpack://@windingtree/ipfs-apis/external commonjs \"@web-std/file\"","webpack://@windingtree/ipfs-apis/./src/index.ts","webpack://@windingtree/ipfs-apis/./src/utils/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"web3.storage\");","import type { Web3Storage } from 'web3.storage';\nimport { Web3Storage as w3s } from 'web3.storage';\n\nexport class Web3StorageApi {\n  private w3Api: Web3Storage;\n\n  constructor(token: string) {\n    if (!token) {\n      throw new Error('Web3Storage Authorization API token must be provided');\n    }\n\n    this.w3Api = new w3s({ token });\n  }\n\n  add(file: File): Promise<string> {\n    return this.w3Api.put(\n      [\n        file\n      ],\n      {\n        wrapWithDirectory: false\n      }\n    );\n  }\n\n  async get(cid: string): Promise<string> {\n    const res = await this.w3Api.get(cid);\n\n    if (!res || !res.ok) {\n      throw new Error(`Failed to get ${cid}`);\n    }\n\n    const files = await res.files();\n\n    return files[0].text();\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web-std/blob\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web-std/file\");","import { Web3StorageApi } from './apis/web3Storage';\nimport { obj2File } from './utils';\n\nconst utils = { obj2File };\n\nexport { Web3StorageApi, utils };\n","import { Blob } from '@web-std/blob';\nimport { File } from '@web-std/file';\n\nexport const obj2File = (obj: unknown, fileName: string): File => {\n  const blob = new Blob([JSON.stringify(obj)], { type : 'application/json' });\n  return new File([blob as BlobPart], fileName);\n}\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","require","Web3StorageApi","constructor","token","Error","this","w3Api","w3s","add","file","put","wrapWithDirectory","cid","res","ok","files","text","utils","obj2File","fileName","blob","Blob","JSON","stringify","type","File"],"sourceRoot":""}